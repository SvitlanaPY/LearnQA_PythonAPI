import requests

#  імпортуємо бібліотеку requests. По-суті у нас в коді з"являється змінна, яка так і називається - requests.
# Усі дії, які ми будемо робити через цю змінну, то ми будемо робити через цю змінну.
#
# requests.get() - викликаємо функцію get, яка створює наш запит. У цю функцію ми можемо передавати кілька параметрів.
# Першим параметром завжди іде URL, на який ми хочемо передати запит. Оскільки це строка, то вона має бути загорнута в повійні лапки.

# Відповідь сервера на будь-який http-запит найчастіше приходить суцільним текстом
# (там вся інф.: код відповіді, text-відповіді, headers, тощо).
# Бібліотека requests парсить цей текст і розкладає його по різних місцях так, щоб нам було зручно.
# У змінній response якраз буде доступ до всіх деталей відповіді сервра
# і те, що в ній доступно, ми можемо побачити напечатавши імя змінної після того, як вона була проініціалізована поставивши крапку після її назви
# текст відповіді представлений у форматі json (текстовий формат для обміну даними між сервером і клієнтом),
# формат якого "ключ":"значення", де КЛЮЧ - це завжди текстове значення, а от ЗНАЧЕННЯ може бути представлене різними типами даних.
# В python-і параметри можна передавати не по порядку, а просто вказуючи який саме параметр ви передаєте, вказавши його назву.
# Щоб передати параметри в запиті - їх треба спершу підготувати.
#  Як правило параметри кладуть в окрему змінну, яку називають payload (але може називатись як-завгодно);
#  в змінну payload ми передаємо словник. Словник чимось схожий на формат json, по суті це ті ж пари "ключ":"значеня",
# КЛЮЧем являється назва параметра, а ЗНАЧЕННЯм якраз є значення самого параметра.


#  в змінну payload кладемо одну пару "ключ":"значеня"
payload = {"name": "USER"}

response = requests.get("https://playground.learnqa.ru/api/hello", params=payload)
print(response.text)
# іменований параметр params (саме в нього треба передавати параметри запиту)
# response.text - Тіло відповіді, що містить строку у форматі json(але не завжди у форматі json);
# str '{"answer":"Hello, USER"}'


# відповідь у форматі json це такий же текст, як і будь-який інший, а форматування робить зручним витягувати з нього будь-які його частини.
# працюючи з текстом як зі строкою, неможливо звернутись до окремого її поля, бо в ній немає пари "ключ":"значення"
# для того, щоб можна було це робити, нам потрібно перетворити цю строку в обєкт
# тоді ми розберемо цей об"єкт і з нього будемо витягувати необхідне нам значення.
# в python-і є функція json(), яка перетворює строку у форматі json в об"єкт

